/*
 * pidControl.c
 *
 *  Created on: May 31, 2024
 *      Author: Phatt
 */


void changeUnit(){
	QEI_mm = (QEI_raw/8192.0)*25.326*pi;
}

void HomemadePID(){
//	Now Lastime error errorsum kp ki kd Iterm dinput Lasterror
	set_point = traj[0];
	static uint32_t timestamp = 0;
	if (timestamp < __HAL_TIM_GET_COUNTER(&htim2)) {
		timestamp = __HAL_TIM_GET_COUNTER(&htim2) + 1000;
		Now = __HAL_TIM_GET_COUNTER(&htim2);
		error = set_point - QEI_mm;

		if(error > 32768)
			error -= 65536;
		if(error < -32768)
			error += 65536;

		if(error > 0){
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15,0);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7,1);
			errorsum = errorsum + (error*(Now-Lastime)/10000);
			Iterm = ki*errorsum;
			if(Iterm < -65535 || Iterm > 65535){
				errorsum = (Iterm/ki) - (error*(Now-Lastime));
			}
			dinput = (error-Lasterror)/(Now-Lastime);
			Vfeedback = (kp*error)+(ki*errorsum)+(kd*dinput);
			if(Vfeedback > 65536){
				Vfeedback = 65536;
			}

			PWMset = (Vfeedback/65536.0)*30000;
		}
		else if(error < 0){
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15,1);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7,0);
			error = error*(-1);

			if(temp_check == 3){
				if(t < Time_acc){
					PWMset = 6000;
				}
				else if(t < Time_const+Time_acc){
					PWMset = 7000;
				}
				else if(t < Time_const+Time_acc+Time_dec){
					PWMset = 4000;
				}
			}
			else if(temp_check == 4){
				if(t < Time_acc_tri*1.4){
					PWMset = 7000;
				}
				else if(t < Time_acc_tri*2){
					PWMset = 3700;
				}
			}
		}
		else if(error == 0){
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15,0);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7,0);
		}

		__HAL_TIM_SET_COMPARE(&htim5, TIM_CHANNEL_2, PWMset);

		Lastime = Now;
		Lasterror = error;
	}
}
